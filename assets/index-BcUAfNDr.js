import{s as r}from"./api-client-Bau_8qIr.js";const i=document.getElementById("logout-button"),m=document.getElementById("login-redirect"),w=document.getElementById("add-article-button"),n=document.getElementById("add-modal"),a=document.getElementById("edit-modal");r.auth.onAuthStateChange((s,l)=>{b(l)});function b(s){s?(i==null||i.classList.remove("hidden"),m==null||m.classList.add("hidden")):(i==null||i.classList.add("hidden"),m==null||m.classList.remove("hidden"))}async function p(){const{data:{session:s}}=await r.auth.getSession();b(s),I(),await h()}p();i==null||i.addEventListener("click",async()=>{const{error:s}=await r.auth.signOut();s?console.error("Podczas wylogowywania wystąpił problem",s):(alert("Wylogowano"),window.location.href="login/")});async function h(){const[{data:s,error:l},{data:{session:f}}]=await Promise.all([r.from("article").select("*").order("created_at",{ascending:!1}),r.auth.getSession()]);if(l){console.error("Fetch error:",l);return}const g=document.querySelector(".articles");if(!g)return;const t=s.map(e=>`
    <article class="article py-6 bg-white/50 p-6 grid grid-cols-[auto_1fr] grid-rows-[auto_auto] gap-x-3 gap-y-2" data-id="${e.id}">
      <div class="col-start-2 row-start-1">
        <h2 class="text-xl font-semibold">${e.title}</h2>
        <h3 class="mt-2">${e.subtitle||""}</h3>
        <div class="text-sm text-primary/70 mt-2">
          <address class="not-italic mt-1.5" rel="author">${e.author}</address>
          <time datetime="${e.created_at}">${new Date(e.created_at).toLocaleDateString()}</time>
          <p class="mb-4 mt-1.5 whitespace-pre-wrap">${e.content}</p>
        </div>
      </div>
      <div class="col-start-2 row-start-2 flex space-x-2">
        ${f?`<button class="edit-button bg-primary hover:bg-hovering px-3 py-1 rounded text-white cursor-pointer">edytuj</button>
        <button class="delete-button bg-secondary text-white px-3 py-1 rounded hover:bg-hoveringS cursor-pointer">usuń</button>`:""}
      </div>
    </article>
  `).join(`
`);g.innerHTML=t}function I(){var l,f,g;document.addEventListener("click",async t=>{if(t.target.classList.contains("edit-button")){const d=t.target.closest(".article").dataset.id,{data:o,error:c}=await r.from("article").select("*").eq("id",d).single();if(c){console.error("błąd...",c);return}document.getElementById("edit-id").value=o.id,document.getElementById("edit-title").value=o.title,document.getElementById("edit-subtitle").value=o.subtitle,document.getElementById("edit-content").value=o.content,document.getElementById("edit-author").value=o.author,a==null||a.showModal()}if(t.target.classList.contains("delete-button")){const d=t.target.closest(".article").dataset.id;if(!confirm("czy na pewno chcesz usunąć?"))return;const{error:c}=await r.from("article").delete().eq("id",d);if(c){console.error("błąd podczas usuwania",c);return}alert("usunięto"),await h()}}),w==null||w.addEventListener("click",async()=>{const{data:{session:t}}=await r.auth.getSession();if(!t){window.location.href="login/";return}n==null||n.showModal()}),(l=document.getElementById("cancel-add"))==null||l.addEventListener("click",()=>n==null?void 0:n.close()),(f=document.getElementById("cancel-edit"))==null||f.addEventListener("click",()=>a==null?void 0:a.close()),(g=document.getElementById("add-form"))==null||g.addEventListener("submit",async t=>{t.preventDefault();const e=document.getElementById("add-title").value,d=document.getElementById("add-subtitle").value,o=document.getElementById("add-content").value,c=document.getElementById("add-author").value,v=new Date().toISOString(),{error:u}=await r.from("article").insert([{title:e,subtitle:d,content:o,author:c,created_at:v}]);if(u){console.error("błąd podczas dodawania",u);return}n==null||n.close(),document.getElementById("add-form").reset(),await h()});const s=document.getElementById("article-form");s&&(s.onsubmit=async t=>{t.preventDefault();const e=document.getElementById("edit-id").value,d=t.target.title.value,o=t.target.content.value,c=t.target.author.value,v=t.target.subtitle?t.target.subtitle.value:null;let u=t.target.tags?t.target.tags.value:'["default"]';try{u=JSON.parse(u)}catch{u=["default"]}const E={title:d,content:o,author:c,subtitle:v,tags:u,created_at:new Date().toISOString()};let y;if(e?y=await r.from("article").update(E).eq("id",e):y=await r.from("article").insert(E),y.error){alert("Błąd: "+y.error.message);return}a==null||a.close(),await h()}),n==null||n.addEventListener("click",t=>{n.querySelector("form").contains(t.target)||n.close()}),a==null||a.addEventListener("click",t=>{a.querySelector("form").contains(t.target)||a.close()})}
