import{s as r}from"./api-client-VsTDM8De.js";const i=document.getElementById("logout-button"),u=document.getElementById("login-redirect"),g=document.getElementById("add-article-button"),c=document.getElementById("add-modal"),l=document.getElementById("edit-modal");r.auth.onAuthStateChange((t,e)=>{E(e)});function E(t){t?(i==null||i.classList.remove("hidden"),u==null||u.classList.add("hidden")):(i==null||i.classList.add("hidden"),u==null||u.classList.remove("hidden"))}async function b(){const{data:{session:t}}=await r.auth.getSession();E(t),await f()}b();i==null||i.addEventListener("click",async()=>{const{error:t}=await r.auth.signOut();t?console.error("Podczas wylogowywania wystąpił problem",t):(alert("Wylogowano"),window.location.href="login/")});async function f(){const[{data:t,error:e},{data:{session:s}}]=await Promise.all([r.from("article").select("*").order("created_at",{ascending:!1}),r.auth.getSession()]);if(e){console.error("Fetch error:",e);return}const a=document.querySelector(".articles");if(!a)return;const n=t.map(o=>`
    <article class="article py-6 bg-white/50 p-6 grid grid-cols-[auto_1fr] grid-rows-[auto_auto] gap-x-3 gap-y-2" data-id="${o.id}">
      <div class="col-start-2 row-start-1">
        <h2 class="text-xl font-semibold">${o.title}</h2>
        <h3 class="mt-2">${o.subtitle||""}</h3>
        <div class="text-sm text-primary/70 mt-2">
          <address class="not-italic mt-1.5" rel="author">${o.author}</address>
          <time datetime="${o.created_at}">${new Date(o.created_at).toLocaleDateString()}</time>
          <p class="mb-4 mt-1.5 whitespace-pre-wrap">${o.content}</p>
        </div>
      </div>
      <div class="col-start-2 row-start-2 flex space-x-2">
        ${s?`<button class="transition-transform duration-300 hover:scale-102 edit-button bg-primary hover:bg-hovering px-3 py-1 rounded text-white cursor-pointer">edytuj</button>
        <button class="transition-transform duration-300 hover:scale-102 delete-button bg-secondary text-white px-3 py-1 rounded hover:bg-hoveringS cursor-pointer">usuń</button>`:""}
      </div>
    </article>
  `).join(`
`);a.innerHTML=n}document.addEventListener("click",async t=>{if(t.target.classList.contains("edit-button")){const s=t.target.closest(".article").dataset.id,{data:a,error:n}=await r.from("article").select("*").eq("id",s).single();if(n){console.error("błąd...",n);return}document.getElementById("edit-id").value=a.id,document.getElementById("edit-title").value=a.title,document.getElementById("edit-subtitle").value=a.subtitle,document.getElementById("edit-content").value=a.content,document.getElementById("edit-author").value=a.author,l.showModal()}if(t.target.classList.contains("delete-button")){const s=t.target.closest(".article").dataset.id;if(!confirm("czy na pewno chcesz usunąć?"))return;const{error:n}=await r.from("article").delete().eq("id",s);if(n){console.error("błąd podczas usuwania",n);return}alert("usunięto"),f()}});g==null||g.addEventListener("click",async()=>{const{data:{session:t}}=await r.auth.getSession();if(!t){window.location.href="login/";return}c.showModal()});var h;(h=document.getElementById("cancel-add"))==null||h.addEventListener("click",()=>c.close());var v;(v=document.getElementById("cancel-edit"))==null||v.addEventListener("click",()=>l.close());var w;(w=document.getElementById("add-form"))==null||w.addEventListener("submit",async t=>{t.preventDefault();const e=document.getElementById("add-title").value,s=document.getElementById("add-subtitle").value,a=document.getElementById("add-content").value,n=document.getElementById("add-author").value,o=new Date().toISOString(),{error:d}=await r.from("article").insert([{title:e,subtitle:s,content:a,author:n,created_at:o}]);if(d){console.error("błąd podczas dodawania",d);return}c.close(),document.getElementById("add-form").reset(),f()});document.getElementById("article-form").onsubmit=async t=>{t.preventDefault();const e=document.getElementById("article-id").value,s=t.target.title.value,a=t.target.content.value,n=t.target.author.value,o=t.target.subtitle?t.target.subtitle.value:null;let d=t.target.tags?t.target.tags.value:'["default"]';try{d=JSON.parse(d)}catch{d=["default"]}const y={title:s,content:a,author:n,subtitle:o,tags:d,created_at:new Date().toISOString()};let m;if(e?m=await r.from("article").update(y).eq("id",e):m=await r.from("article").insert(y),m.error){alert("Błąd: "+m.error.message);return}document.getElementById("article-modal").close(),await fetchArticles()};c==null||c.addEventListener("click",t=>{c.querySelector("form").contains(t.target)||c.close()});l==null||l.addEventListener("click",t=>{l.querySelector("form").contains(t.target)||l.close()});
